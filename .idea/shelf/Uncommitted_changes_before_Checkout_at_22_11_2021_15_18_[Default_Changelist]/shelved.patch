Index: BOT_Manager.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from instabot import Bot\r\nimport os\r\nimport glob\r\nimport time\r\n\r\nimport datetime\r\nimport MainPage\r\nfrom geopy.geocoders import Nominatim\r\nfrom apscheduler.schedulers.blocking import BlockingScheduler\r\n\r\nimport shutil\r\n\r\n\r\nfile_path = '/Users/fabiodonello/Desktop/Esame OOP/InstgramBot_2/config/log/'\r\nshutil.rmtree(file_path)\r\nbot = Bot()\r\nfile_id = format(id(bot))\r\nx = 0\r\n\r\n\r\ndef ig_login(proxy_list, username, password, var):\r\n    # cookie_del = glob.glob(\"config/*cookie.json\")\r\n    # os.remove(cookie_del[0])\r\n    if var == 1:\r\n        #bot.login(username=username, password=password, is_threaded=True)\r\n        f = open(\"Credenziali\", \"w\")\r\n        f.write(username)\r\n        f.write(\"\\n\")\r\n        f.write(password)\r\n        f.close()\r\n\r\n        print(\"Login riuscito A\")\r\n\r\n    if var == 0:\r\n        f = open(\"Credenziali\", \"r\")\r\n        username = f.readline()\r\n        password = f.readline()\r\n        f.close()\r\n        #bot.login(username=username, password=password, is_threaded=True)\r\n        x = 1\r\n        print(\"Login riuscito B\")\r\n\r\n\r\ndef ig_logout():\r\n    f = open(\"Credenziali\", \"r\")\r\n    username = f.readline()\r\n    f.close()\r\n    f = open(\"Credenziali\", \"w\").close()\r\n    #bot.logout(username=username, is_threaded=True)\r\n    print(\"Logout eseguito\")\r\n\r\n\r\n\r\n# Set follow\r\ndef ig_follow_hashtag(hashtags):\r\n    while x == 0:\r\n        print(\"aspetto il login\")\r\n        time.sleep(2)\r\n\r\n    print(hashtags)\r\n    for hashtag in hashtags:\r\n        users = bot.get_hashtag_users(hashtag)\r\n        print(time.sleep(300))\r\n        for user in users:\r\n            bot.follow(user)\r\n            print(time.sleep(300))\r\n\r\n\r\ndef ig_follow_location(location):\r\n    app = Nominatim(user_agent=\"tutorial\")\r\n    localization = app.geocode(location).raw\r\n\r\n    latitude = localization['lat']\r\n    longitude = localization['lon']\r\n    position = bot.get_locations_from_coordinates(latitude=latitude, longitude=longitude)\r\n\r\n    for positions in position:\r\n        user_position = bot.get_geotag_users(geotag=positions)\r\n        for users in user_position:\r\n            bot.follow_followers(user_id=users)\r\n            time.sleep(240)\r\n\r\n\r\ndef ig_follow_account(accounts):\r\n    while x == 0:\r\n        print(\"aspetto il login\")\r\n        time.sleep(2)\r\n\r\n    print(accounts)\r\n    for account in accounts:\r\n        users = bot.get_user_followers(account)\r\n        print(time.sleep(300))\r\n        for user in users:\r\n            bot.follow(user)\r\n            print(time.sleep(300))\r\n\r\n\r\n\r\n# Set Likes\r\ndef ig_likes_hashtag(hashtags):\r\n    for hashtag in hashtags:\r\n        medias = bot.get_hashtag_medias(hashtag)\r\n        for media in medias:\r\n            bot.like(media)\r\n            time.sleep(30)\r\n\r\n\r\ndef ig_likes_location(location):\r\n    app = Nominatim(user_agent=\"tutorial\")\r\n    localization = app.geocode(location).raw\r\n\r\n    latitude = localization['lat']\r\n    longitude = localization['lon']\r\n    position = bot.get_locations_from_coordinates(latitude=latitude, longitude=longitude)\r\n\r\n    amount = 850\r\n    while amount != 0:\r\n        bot.like_location_feed(place=position, amount=1)\r\n        time.sleep(40)\r\n        amount = amount - 1\r\n\r\n\r\ndef ig_likes_account(accounts):\r\n    for account in accounts:\r\n        bot.like_followers(user_id=account, nlikes=3)\r\n        time.sleep(90)\r\n\r\n\r\n# Set auto-publish\r\n'''def ig_upload_photo():\r\n    print(\"Done\")\r\n    print(datetime.datetime.now())\r\n\r\ndef schedule_upload_photo():\r\n\r\n    scheduler = BlockingScheduler(timezone='Europe/Rome')\r\n    n = 2\r\n    while n != 0:\r\n        scheduler.add_job(ig_upload_photo, 'interval', seconds=20)\r\n         print(datetime.datetime.now())\r\n        n = n - 1\r\n        scheduler.get_jobs()\r\n        time.sleep(10)\r\n\r\nscheduler.start()\r\n'''\r\n=======\r\ndef ig_unfollow(list_value, white_list):\r\n\r\n    f_name = r\"/Users/fabiodonello/Desktop/Esame OOP/InstgramBot_2/config/followed.txt\"\r\n    def file_len(f_name):\r\n        with open(f_name, \"r\") as followed_file:\r\n            for i, l in enumerate(followed_file):\r\n                pass\r\n        return i + 1\r\n    followed_file_len = file_len(f_name)\r\n    print(followed_file_len)\r\n    with open(f_name, \"r\") as followed_file:\r\n        for y in range(followed_file_len):\r\n            user_id = followed_file.readline()\r\n            print(user_id)\r\n            \"\"\"user_info = bot.get_user_info(user_id)            \r\n            time.sleep(3)\r\n            if list_value[0][0] == 1:\r\n                if user_info['giorno in cui mi ha iniziato a seguire'] + list_value[0][1] > \"data odierna\":\r\n                    if user_info['username'] not in white_list:\r\n                        bot.unfollow(user_id)\r\n                        time.sleep(3)\r\n            if list_value[1][0] == 1:\r\n                if user_info['follower'] < list_value[1][1] :\r\n                    if user_info['username'] not in white_list:\r\n                        bot.unfollow(user_id)\r\n                        time.sleep(3)\r\n            if list_value[2][0] == 1:\r\n                if user_info['numero media'] < list_value[2][1] :\r\n                    if user_info['username'] not in white_list:\r\n                        bot.unfollow(user_id)\r\n                        time.sleep(3)\r\n            if list_value[3][0] == 1:\r\n                if (user_info['data ultimo post'] and user_info['data ultimo storia']) < list_value[3][1]:\r\n                    if user_info['username'] not in white_list:\r\n                        bot.unfollow(user_id)\r\n                        time.sleep(3) \"\"\"\r\n\r\n\r\ndef ig_direct(list_value, message):\r\n    # Direct your follower\r\n    if list_value[0][0] == 1:\r\n        f = open(\"Credenziali\", \"r\")\r\n        username = f.readline()\r\n        f.close()\r\n        following = bot.get_user_following(username)\r\n        following_id = bot.convert_to_user_id(following)\r\n        for user in following_id:\r\n            bot.send_message(user, message)\r\n\r\n    # Direct your following\r\n    if list_value[1][0] == 1:\r\n        print(\"sono dentro\")\r\n        f_name = r\"/Users/fabiodonello/Desktop/Esame OOP/InstgramBot_2/config/followed.txt\"\r\n        def file_len(f_name):\r\n            with open(f_name, \"r\") as followed_file:\r\n                for i, l in enumerate(followed_file):\r\n                    pass\r\n            return i + 1\r\n\r\n        followed_file_len = file_len(f_name)\r\n        print(followed_file_len)\r\n        with open(f_name, \"r\") as followed_file:\r\n            for y in range(followed_file_len):\r\n                user_id = followed_file.readline()\r\n                print(user_id)\r\n                bot.send_message(user_id, message)\r\n                time.sleep(3)\r\n\r\n    # Direct your account follower\r\n    if list_value[2][0] == 1:\r\n        for account in list_value[2][1]:\r\n            account_id = bot.convert_to_user_id(account)\r\n            account_followers = bot.get_user_followers(account_id)\r\n            time.sleep(3)\r\n            for account_follower in account_followers:\r\n                bot.send_message(account_follower, message)\r\n                time.sleep(3)\r\n\r\n    # Direct with hashtag\r\n    if list_value[3][0] == 1:\r\n        for hashtag in list_value[3][1]:\r\n            hashtag_users = bot.get_hashtag_users(hashtag)\r\n            time.sleep(3)\r\n            for hashtag_user in hashtag_users:\r\n                bot.send_message(hashtag_user, message)\r\n                time.sleep(3)\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/BOT_Manager.py b/BOT_Manager.py
--- a/BOT_Manager.py	
+++ b/BOT_Manager.py	
@@ -10,7 +10,6 @@
 
 import shutil
 
-
 file_path = '/Users/fabiodonello/Desktop/Esame OOP/InstgramBot_2/config/log/'
 shutil.rmtree(file_path)
 bot = Bot()
@@ -22,7 +21,7 @@
     # cookie_del = glob.glob("config/*cookie.json")
     # os.remove(cookie_del[0])
     if var == 1:
-        #bot.login(username=username, password=password, is_threaded=True)
+        # bot.login(username=username, password=password, is_threaded=True)
         f = open("Credenziali", "w")
         f.write(username)
         f.write("\n")
@@ -36,7 +35,7 @@
         username = f.readline()
         password = f.readline()
         f.close()
-        #bot.login(username=username, password=password, is_threaded=True)
+        # bot.login(username=username, password=password, is_threaded=True)
         x = 1
         print("Login riuscito B")
 
@@ -46,11 +45,10 @@
     username = f.readline()
     f.close()
     f = open("Credenziali", "w").close()
-    #bot.logout(username=username, is_threaded=True)
+    # bot.logout(username=username, is_threaded=True)
     print("Logout eseguito")
 
 
-
 # Set follow
 def ig_follow_hashtag(hashtags):
     while x == 0:
@@ -95,7 +93,6 @@
             print(time.sleep(300))
 
 
-
 # Set Likes
 def ig_likes_hashtag(hashtags):
     for hashtag in hashtags:
@@ -144,15 +141,17 @@
 
 scheduler.start()
 '''
-=======
+
+
 def ig_unfollow(list_value, white_list):
-
     f_name = r"/Users/fabiodonello/Desktop/Esame OOP/InstgramBot_2/config/followed.txt"
+
     def file_len(f_name):
         with open(f_name, "r") as followed_file:
             for i, l in enumerate(followed_file):
                 pass
         return i + 1
+
     followed_file_len = file_len(f_name)
     print(followed_file_len)
     with open(f_name, "r") as followed_file:
@@ -198,6 +197,7 @@
     if list_value[1][0] == 1:
         print("sono dentro")
         f_name = r"/Users/fabiodonello/Desktop/Esame OOP/InstgramBot_2/config/followed.txt"
+
         def file_len(f_name):
             with open(f_name, "r") as followed_file:
                 for i, l in enumerate(followed_file):
@@ -231,4 +231,3 @@
             for hashtag_user in hashtag_users:
                 bot.send_message(hashtag_user, message)
                 time.sleep(3)
-
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.9\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.9" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8 (base)" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/InstgramBot_0.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n  <component name=\"PyDocumentationSettings\">\r\n    <option name=\"format\" value=\"PLAIN\" />\r\n    <option name=\"myDocStringFormat\" value=\"Plain\" />\r\n  </component>\r\n  <component name=\"TestRunnerService\">\r\n    <option name=\"PROJECT_TEST_RUNNER\" value=\"pytest\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/InstgramBot_0.iml b/.idea/InstgramBot_0.iml
--- a/.idea/InstgramBot_0.iml	
+++ b/.idea/InstgramBot_0.iml	
@@ -2,7 +2,7 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
+    <orderEntry type="jdk" jdkName="Python 3.8 (base)" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
   <component name="PyDocumentationSettings">
